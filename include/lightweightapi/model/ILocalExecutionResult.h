/**
 * Stratis Node API
 * Access to the Stratis Node's api.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ILocalExecutionResult.h
 *
 *
 */

#ifndef STRATIS_API_MODEL_ILocalExecutionResult_H_
#define STRATIS_API_MODEL_ILocalExecutionResult_H_

#include "StratisCPPLightClient/ModelBase.h"

#include "StratisCPPLightClient/Object.h"
#include "StratisCPPLightClient/model/AnyType.h"
#include "StratisCPPLightClient/model/ContractErrorMessage.h"
#include "StratisCPPLightClient/model/Gas.h"
#include "StratisCPPLightClient/model/Log.h"
#include "StratisCPPLightClient/model/TransferInfo.h"
#include <vector>

namespace stratis {
namespace api {
namespace model {

class TransferInfo;
class Gas;
class ContractErrorMessage;
class Log;

/// <summary>
///
/// </summary>
class ILocalExecutionResult : public ModelBase {
public:
  ILocalExecutionResult();
  virtual ~ILocalExecutionResult();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// ILocalExecutionResult members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::shared_ptr<TransferInfo>> &getInternalTransfers();
  bool internalTransfersIsSet() const;
  void unsetInternalTransfers();

  void
  setInternalTransfers(const std::vector<std::shared_ptr<TransferInfo>> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Gas> getGasConsumed() const;
  bool gasConsumedIsSet() const;
  void unsetGasConsumed();

  void setGasConsumed(const std::shared_ptr<Gas> &value);

  /// <summary>
  ///
  /// </summary>
  bool isRevert() const;
  bool revertIsSet() const;
  void unsetRevert();

  void setRevert(bool value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<ContractErrorMessage> getErrorMessage() const;
  bool errorMessageIsSet() const;
  void unsetErrorMessage();

  void setErrorMessage(const std::shared_ptr<ContractErrorMessage> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<AnyType> getRReturn() const;
  bool rReturnIsSet() const;
  void unsetr_Return();

  void setRReturn(const std::shared_ptr<AnyType> &value);

  /// <summary>
  ///
  /// </summary>
  std::vector<std::shared_ptr<Log>> &getLogs();
  bool logsIsSet() const;
  void unsetLogs();

  void setLogs(const std::vector<std::shared_ptr<Log>> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Object> getStateRoot() const;
  bool stateRootIsSet() const;
  void unsetStateRoot();

  void setStateRoot(const std::shared_ptr<Object> &value);

protected:
  std::vector<std::shared_ptr<TransferInfo>> m_InternalTransfers;
  bool m_InternalTransfersIsSet;
  std::shared_ptr<Gas> m_GasConsumed;
  bool m_GasConsumedIsSet;
  bool m_Revert;
  bool m_RevertIsSet;
  std::shared_ptr<ContractErrorMessage> m_ErrorMessage;
  bool m_ErrorMessageIsSet;
  std::shared_ptr<AnyType> m_r_Return;
  bool m_r_ReturnIsSet;
  std::vector<std::shared_ptr<Log>> m_Logs;
  bool m_LogsIsSet;
  std::shared_ptr<Object> m_StateRoot;
  bool m_StateRootIsSet;
};

} // namespace model
} // namespace api
} // namespace stratis

#endif /* STRATIS_API_MODEL_ILocalExecutionResult_H_ */
