/**
 * Stratis Node API
 * Access to the Stratis Node's api.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReceiptResponse.h
 *
 *
 */

#ifndef STRATIS_API_MODEL_ReceiptResponse_H_
#define STRATIS_API_MODEL_ReceiptResponse_H_

#include "StratisCPPLightClient/ModelBase.h"

#include "StratisCPPLightClient/model/LogResponse.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace stratis {
namespace api {
namespace model {

class LogResponse;

/// <summary>
///
/// </summary>
class ReceiptResponse : public ModelBase {
public:
  ReceiptResponse();
  virtual ~ReceiptResponse();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// ReceiptResponse members

  /// <summary>
  ///
  /// </summary>
  utility::string_t getTransactionHash() const;
  bool transactionHashIsSet() const;
  void unsetTransactionHash();

  void setTransactionHash(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getBlockHash() const;
  bool blockHashIsSet() const;
  void unsetBlockHash();

  void setBlockHash(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  int64_t getBlockNumber() const;
  bool blockNumberIsSet() const;
  void unsetBlockNumber();

  void setBlockNumber(int64_t value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getPostState() const;
  bool postStateIsSet() const;
  void unsetPostState();

  void setPostState(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  int64_t getGasUsed() const;
  bool gasUsedIsSet() const;
  void unsetGasUsed();

  void setGasUsed(int64_t value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getFrom() const;
  bool fromIsSet() const;
  void unsetFrom();

  void setFrom(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getTo() const;
  bool toIsSet() const;
  void unsetTo();

  void setTo(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getNewContractAddress() const;
  bool newContractAddressIsSet() const;
  void unsetNewContractAddress();

  void setNewContractAddress(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  bool isSuccess() const;
  bool successIsSet() const;
  void unsetSuccess();

  void setSuccess(bool value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getReturnValue() const;
  bool returnValueIsSet() const;
  void unsetReturnValue();

  void setReturnValue(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getBloom() const;
  bool bloomIsSet() const;
  void unsetBloom();

  void setBloom(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getError() const;
  bool errorIsSet() const;
  void unsetError();

  void setError(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  std::vector<std::shared_ptr<LogResponse>> &getLogs();
  bool logsIsSet() const;
  void unsetLogs();

  void setLogs(const std::vector<std::shared_ptr<LogResponse>> &value);

protected:
  utility::string_t m_TransactionHash;
  bool m_TransactionHashIsSet;
  utility::string_t m_BlockHash;
  bool m_BlockHashIsSet;
  int64_t m_BlockNumber;
  bool m_BlockNumberIsSet;
  utility::string_t m_PostState;
  bool m_PostStateIsSet;
  int64_t m_GasUsed;
  bool m_GasUsedIsSet;
  utility::string_t m_From;
  bool m_FromIsSet;
  utility::string_t m_To;
  bool m_ToIsSet;
  utility::string_t m_NewContractAddress;
  bool m_NewContractAddressIsSet;
  bool m_Success;
  bool m_SuccessIsSet;
  utility::string_t m_ReturnValue;
  bool m_ReturnValueIsSet;
  utility::string_t m_Bloom;
  bool m_BloomIsSet;
  utility::string_t m_Error;
  bool m_ErrorIsSet;
  std::vector<std::shared_ptr<LogResponse>> m_Logs;
  bool m_LogsIsSet;
};

} // namespace model
} // namespace api
} // namespace stratis

#endif /* STRATIS_API_MODEL_ReceiptResponse_H_ */
