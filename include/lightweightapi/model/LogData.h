/**
 * Stratis Node API
 * Access to the Stratis Node's api.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LogData.h
 *
 *
 */

#ifndef STRATIS_API_MODEL_LogData_H_
#define STRATIS_API_MODEL_LogData_H_

#include "StratisCPPLightClient/ModelBase.h"

#include "StratisCPPLightClient/model/AnyType.h"
#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>

namespace stratis {
namespace api {
namespace model {

/// <summary>
///
/// </summary>
class LogData : public ModelBase {
public:
  LogData();
  virtual ~LogData();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// LogData members

  /// <summary>
  ///
  /// </summary>
  utility::string_t getEvent() const;
  bool eventIsSet() const;
  void unsetEvent();

  void setEvent(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  std::map<utility::string_t, std::shared_ptr<AnyType>> &getData();
  bool dataIsSet() const;
  void unsetData();

  void
  setData(const std::map<utility::string_t, std::shared_ptr<AnyType>> &value);

protected:
  utility::string_t m_Event;
  bool m_EventIsSet;
  std::map<utility::string_t, std::shared_ptr<AnyType>> m_Data;
  bool m_DataIsSet;
};

} // namespace model
} // namespace api
} // namespace stratis

#endif /* STRATIS_API_MODEL_LogData_H_ */
